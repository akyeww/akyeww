const sizes={width:window.innerWidth,height:window.innerHeight},canvas=document.querySelector("canvas.webgl"),scene=new THREE.Scene,renderer=new THREE.WebGLRenderer({canvas:canvas,alpha:!0});renderer.setSize(sizes.width,sizes.height),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2));const camera=new THREE.PerspectiveCamera(35,sizes.width/sizes.height,.1,100);camera.position.z=6;const cameraGroup=new THREE.Group;cameraGroup.add(camera),scene.add(cameraGroup);const directionalLight=new THREE.DirectionalLight("#ffffff",1);directionalLight.position.set(1,1,0),scene.add(directionalLight);const cube=new THREE.Mesh(new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:"#ff0000"})),material=new THREE.MeshToonMaterial({color:"#ffeded"}),mesh1=new THREE.Mesh(new THREE.TorusGeometry(1,.4,16,60),material),mesh2=new THREE.Mesh(new THREE.ConeGeometry(1,2,32),material),mesh3=new THREE.Mesh(new THREE.TorusKnotGeometry(.8,.35,100,16),material);scene.add(mesh1,mesh2,mesh3);const sectionMeshes=[mesh1,mesh2,mesh3],objectsDistance=4;mesh1.position.x=1.75,mesh2.position.x=-1.75,mesh3.position.x=1.75,mesh1.position.y=-0,mesh2.position.y=-4,mesh3.position.y=-8;const particlesCount=200,positions=new Float32Array(600);for(let e=0;e<200;e++)positions[3*e+0]=10*(Math.random()-.5),positions[3*e+1]=2-4*Math.random()*sectionMeshes.length,positions[3*e+2]=10*(Math.random()-.5);const particlesGeometry=new THREE.BufferGeometry;particlesGeometry.setAttribute("position",new THREE.BufferAttribute(positions,3));const particlesMaterial=new THREE.PointsMaterial({color:"#ffeded",sizeAttenuation:!0,size:.03}),particles=new THREE.Points(particlesGeometry,particlesMaterial);scene.add(particles);let scrollY=window.scrollY,currentSection=0;window.addEventListener("scroll",(()=>{scrollY=window.scrollY;const e=Math.round(scrollY/sizes.height);e!=currentSection&&(currentSection=e,gsap.to(sectionMeshes[currentSection].rotation,{duration:1.5,ease:"power2.inOut",x:"+=6",y:"+=3"}))}));const cursor={x:0,y:0};window.addEventListener("mousemove",(e=>{cursor.x=e.clientX/sizes.width-.5,cursor.y=e.clientY/sizes.height-.5})),window.addEventListener("resize",(()=>{sizes.width=window.innerWidth,sizes.height=window.innerHeight,camera.aspect=sizes.width/sizes.height,camera.updateProjectionMatrix(),renderer.setSize(sizes.width,sizes.height),renderer.setPixelRatio(Math.min(window.devicePixelRatio,2))}));const clock=new THREE.Clock;let previousTime=0;const tick=()=>{const e=clock.getElapsedTime(),i=e-previousTime;previousTime=e;for(const e of sectionMeshes)e.rotation.x+=.1*i,e.rotation.y+=.12*i;camera.position.y=-scrollY/sizes.height*4,parallax=cursor.x,cameraGroup.position.x+=5*(cursor.x-cameraGroup.position.x)*i,cameraGroup.position.y+=5*(-cursor.y-cameraGroup.position.y)*i,renderer.render(scene,camera),window.requestAnimationFrame(tick)};tick();
//# sourceMappingURL=index.83b00cd7.js.map
